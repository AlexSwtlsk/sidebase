# This workflow adds a newly created issue to the "SIDESTREAM" project
#
# The project can be found here: https://github.com/orgs/sidestream-tech/projects/10
# To get the `PROJECT_ID` used in belows action, execute the following commands using the github `gh` cli:
#
# ```sh
# > gh auth login
# > gh api graphql -f query='
#     query($org: String!, $number: Int!) {
#       organization(login: $org){
#         projectNext(number: $number) {
#           id
#           fields(first:20) {
#             nodes {
#               id
#               name
#               settings
#             }
#           }
#         }
#       }
#     }' -f org=sidestream-tech -F number=10 --jq '.data.organization.projectNext.id'
# ```
#
# The `GH_WORKFLOW_TOKEN` of this flow needs the following permissions:
# - admin:org - as project boards are organization wide
# - repo - this full level is sadly required in order to manage repository issues

name: Add issue to project "SIDESTREAM"
on:
  issues:
    types:
      - opened
jobs:
  add_issue_to_project:
    runs-on: ubuntu-latest
    steps:
      - name: Add issue to project
        env:
          GITHUB_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
          PROJECT_ID: ${{ secrets.GH_PROJECT_ID }}
        run: |
          gh api graphql -f query='
            mutation($project:ID!, $issue:ID!) {
              addProjectNextItem(input: {projectId: $project, contentId: $issue}) {
                projectNextItem {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f issue=$ISSUE_ID
